version: "3"

services:

    oauth_provider:
        build:
            context: OAUTH_provider/
            dockerfile: Dockerfile
        # restart: always
        hostname: 'oauth_provider.local'
        # stop container from exiting(0) after running @COMMAND
        environment:
            - MYSQL_DATABASE='db'
            # So you don't have to use root, but you can if you like
            - MYSQL_USER='user'
            - MYSQL_PASSWORD='password'
            # Password for root access
            - MYSQL_ROOT_PASSWORD='root'
        ports:
            - '80:80'
        volumes:
            # - './OAUTH_provider/db.sql:/var/www/html/db.sql'
            - './OAUTH_provider/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf'
            - './OAUTH_provider/nginx/fastcgi_params:/etc/nginx/fastcgi_params'

        networks:
            - auth_network
        command: >
            bash -c " 
            usermod -d /var/lib/mysql/ mysql
            && service mysql start
            && mysql -u root -proot < db.sql
            && chown -R www-data:www-data /var/www/html/
            && chmod -R 770 /var/www/html/
            && chmod 600 /etc/nginx/ssl
            && service php7.2-fpm start
            && service nginx start
            && git clone https://github.com/bshaffer/oauth2-server-php.git -b master
            && tail -f /dev/null"


    auth_server:
        build:
            context: auth_server/
            dockerfile: Dockerfile
            args:
                USER_ID: 1000
                GROUP_ID: 1000
        restart: always
        hostname: 'auth_server.local'
        ports:
            - "3000:3000"
        networks:
            - auth_network
        links: 
            - oauth_provider
        depends_on: 
            - oauth_provider
        command: /go/src/auth_server/main

    web_application:
        build:
            context: web_application/
            dockerfile: Dockerfile
            args:
                USER_ID: 1000
                GROUP_ID: 1000
        restart: always
        hostname: 'web_application.local'
        ports:
            - "9000:9000"
        networks:
            - auth_network
        links: 
            - oauth_provider
            - client
            - auth_server
        depends_on: 
            - oauth_provider
            - client
            - auth_server
        command: /go/src/web_application/main


    client:
        build:
            context: client/
            dockerfile: Dockerfile
            args:
                USER_ID: 1000
                GROUP_ID: 1000
        restart: always
        ports:
            - "8080:8080"
        hostname: 'client.local'
        links:
            - auth_server
        depends_on:
            - auth_server
        networks:
            - auth_network
        command: /go/src/client/main

networks:
  auth_network:
    driver: bridge
    external: false
